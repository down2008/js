const config = require('../config')
const { cmd } = require('../command')
const axios = require("axios")

cmd({
    pattern: "trt",
    alias: ["translate", "trad"],
    desc: "üåç Translate any text into English",
    react: "‚ö°",
    category: "convert",
    filename: __filename
},
async (conn, mek, m, { q, reply }) => {
    try {
        // Case 1: user replies to a message
        if (m.quoted) {
            const textToTranslate = m.quoted.text;
            if (!textToTranslate) return reply("‚ùó ·¥õ ú·¥á  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á  ú·¥Äs …¥·¥è ·¥õ·¥áx·¥õ.");

            const url = `https://api.mymemory.translated.net/get?q=${encodeURIComponent(textToTranslate)}&langpair=auto|en`;
            const response = await axios.get(url);
            const translation = response.data.responseData.translatedText;

            return reply(translation);
        }

        // Case 2: direct text
        if (!q) return reply("‚ùó ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥õ·¥áx·¥õ ·¥è Ä  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á.\n\nUsage: `.·¥õ Ä·¥õ  ú·¥á ü ü·¥è ·¥°·¥è Ä ü·¥Ö`");

        const textToTranslate = q;
        const url = `https://api.mymemory.translated.net/get?q=${encodeURIComponent(textToTranslate)}&langpair=auto|en`;
        const response = await axios.get(url);
        const translation = response.data.responseData.translatedText;

        return reply(translation);

    } catch (e) {
        console.log(e);
        return reply("‚ö†Ô∏è Error while translating, please try again later ü§ï");
    }
});
