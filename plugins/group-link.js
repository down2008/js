const { cmd } = require('../command');
const { getBuffer } = require('../lib/functions2');
const config = require('../config');

cmd({
    pattern: "linkgroup",
    alias: ["link", "invite", "grouplink", "satan-link"],
    desc: "Get group invite link.",
    category: "group",
    react: "üîó",
    filename: __filename
}, async (conn, mek, m, { from, isGroup, sender, reply }) => {
    try {
        // V√©rifie si c'est un groupe
        if (!isGroup) return reply("üö´ ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ãs ·¥è…¥ ü è …™…¥ …¢ Ä·¥è·¥ú·¥òs.");

        // R√©cup√®re infos du bot et de l'exp√©diteur
        const botNumber = (conn.user.id.includes('@') ? conn.user.id.split('@')[0] : conn.user.id.split(':')[0]);
        const senderNumber = sender.split('@')[0];

        // R√©cup√®re infos du groupe
        const metadata = await conn.groupMetadata(from);
        const admins = metadata.participants.filter(p => p.admin !== null);
        const isBotAdmin = admins.some(a => a.id.split('@')[0] === botNumber);
        const isAdmin = admins.some(a => a.id === sender);

        // Permission
        if (!isBotAdmin) return reply("‚ùå I ·¥ç·¥ús·¥õ  ô·¥á ·¥Ä·¥Ö·¥ç…™…¥ ·¥õ·¥è …¢·¥á·¥õ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò  ü…™…¥·¥ã.");
        if (!isAdmin) return reply("‚ùå ·¥è…¥ ü è …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.");

        // Invite link
        const inviteCode = await conn.groupInviteCode(from);
        const inviteLink = `https://chat.whatsapp.com/${inviteCode}`;

        // Donn√©es du groupe
        const ownerJid = metadata.owner || '';
        const groupOwner = ownerJid ? '@' + ownerJid.split('@')[0] : 'Unknown';
        const groupName = metadata.subject || 'Unknown';
        const memberCount = metadata.participants.length;

        // Texte final
        const caption = `
‚ï≠‚îÄ‚îÄ‚îÄ„Äå  *ùêÜùêëùêéùêîùêè ùêãùêàùêçùêä* „Äç
‚îÇ üë• ·¥ç·¥á·¥ç ô·¥á Äs: *${memberCount}*
‚îÇ üëë ·¥è·¥°…¥·¥á Ä: ${groupOwner}
‚îÇ üè∑Ô∏è …¥·¥Ä·¥ç·¥á: ${groupName}
‚îÇ üîó Link: ${inviteLink}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ
> _ Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö  ô è @${senderNumber}_`;

        // Image du groupe
        let ppUrl;
        try {
            ppUrl = await conn.profilePictureUrl(from, 'image');
        } catch {
            ppUrl = 'https://telegra.ph/file/6880771a42bad09dd6087.jpg';
        }

        const buffer = await getBuffer(ppUrl);

        // Envoi du message
        return conn.sendMessage(from, {
            image: buffer,
            caption,
            mentions: [ownerJid, sender]
        }, { quoted: m });

    } catch (e) {
        console.error("Error in linkgroup:", e);
        reply(`‚ö†Ô∏è Error: ${e.message}`);
    }
});
