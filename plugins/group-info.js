const { cmd } = require('../command');
const { getBuffer } = require('../lib/functions2'); // Assure-toi que cette fonction r√©cup√®re bien les buffers

cmd({
    pattern: "ginfo",
    react: "ü•è",
    alias: ["groupinfo"],
    desc: "Get group information.",
    category: "group",
    use: '.ginfo',
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, isAdmins, isisOwner }) => {
    try {
        if (!isGroup) return reply("‚ùå ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥°·¥è Ä·¥ãs …™…¥ …¢ Ä·¥è·¥ú·¥òs.");
        if (!isAdmins && !isOwner) return reply("‚õî ·¥è…¥ ü è *…¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s* ·¥è Ä * ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä* ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s.");
        
        // Fetch group metadata
        const metadata = await conn.groupMetadata(from);
        const groupAdmins = participants.filter(p => p.admin);
        const owner = metadata.owner || groupAdmins[0]?.id || "unknown";

        // Profile picture with fallback
        let ppUrl;
        try { ppUrl = await conn.profilePictureUrl(from, 'image'); }
        catch { ppUrl = 'https://i.ibb.co/KhYC4FY/1221bc0bdd2354b42b293317ff2adbcf-icon.png'; }

        const buffer = await getBuffer(ppUrl);

        // Admin list
        const listAdmin = groupAdmins.map((v, i) => `‚îã ‚Ä¢ @${v.id.split('@')[0]}`).join('\n');

        // Styled group info
        const gdata = `‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢
‚îã *…¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á* : ${metadata.subject}
‚îã *…¢ Ä·¥è·¥ú·¥ò …™·¥Ö* : ${metadata.id}
‚îã *·¥ò·¥Ä Ä·¥õ…™·¥Ñ…™·¥ò·¥Ä…¥·¥õs* : ${metadata.size}
‚îã *…¢ Ä·¥è·¥ú·¥ò ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä* : @${owner.split('@')[0]}
‚îã *·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥* : ${metadata.desc?.toString() || 'No description'}
‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢
‚îã *·¥Ä·¥Ö·¥ç…™…¥s (${groupAdmins.length})*:
${listAdmin}
‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢
‚îã *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú*
‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢`;

        // Send message with mentions
        await conn.sendMessage(from, {
            image: buffer,
            caption: gdata,
            mentions: groupAdmins.map(v => v.id).concat([owner])
        });

    } catch (e) {
        console.error("Ginfo Error:", e);
        reply(`‚ùå An error occurred:\n\n${e?.message || e}`);
    }
});
