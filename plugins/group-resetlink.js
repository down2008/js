const config = require('../config')
const { cmd } = require('../command')
const { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, runtime, sleep, fetchJson } = require('../lib/functions')

cmd({
    pattern: "revoke",
    react: "üñáÔ∏è",
    alias: ["revokegrouplink", "resetglink", "revokelink", "f_revoke"],
    desc: "To Reset the group link",
    category: "group",
    use: '.revoke',
    filename: __filename
},
async (conn, mek, m, {
    from, isCmd, isGroup, sender, isBotAdmins,
    isAdmins, reply
}) => {
    try {
        if (!isGroup) return reply(`‚ùå ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥°·¥è Ä·¥ãs …™…¥ …¢ Ä·¥è·¥ú·¥òs.`);
        if (!isAdmins) return reply(`‚õî  è·¥è·¥ú ·¥ç·¥ús·¥õ  ô·¥á ·¥Ä *…¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥* ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.`);
        if (!isBotAdmins) return reply(`‚ùå I …¥·¥á·¥á·¥Ö ·¥õ·¥è  ô·¥á *·¥Ä·¥Ö·¥ç…™…¥* ·¥õ·¥è  Ä·¥ás·¥á·¥õ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò  ü…™…¥·¥ã.`);

        await conn.groupRevokeInvite(from);
        await conn.sendMessage(from, {
            text: `‚úÖ *…¢ Ä·¥è·¥ú·¥ò  ü…™…¥·¥ã  ú·¥Äs  ô·¥á·¥á…¥  Ä·¥ás·¥á·¥õ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è!*`
        }, { quoted: mek });

    } catch (err) {
        console.error(err);
        reply(`‚ùå Error resetting group link.`);
    }
});
