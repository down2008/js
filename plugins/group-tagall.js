const config = require('../config');
const { cmd } = require('../command');
const { getRandom } = require('../lib/functions');

cmd({
    pattern: "tagall",
    react: "üîä",
    alias: ["gc_tagall"],
    desc: "Tag all group members (Admins & Owner only)",
    category: "group",
    use: '.tagall [message]',
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, isAdmins, isCreator, prefix, command, args, body }) => {
    try {
        // üîπ Group-only check
        if (!isGroup) {
            await conn.sendMessage(from, { react: { text: '‚ùå', key: m.key } });
            return reply("‚ùå ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs.");
        }

        // üîπ Permission check (Admin OR Bot Owner)
        if (!isAdmins && !isCreator) {
            await conn.sendMessage(from, { react: { text: '‚ùå', key: m.key } });
            return reply("‚ùå ·¥è…¥ ü è …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s ·¥è Ä ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.");
        }

        // üîπ Get group info
        const groupInfo = await conn.groupMetadata(from).catch(() => null);
        if (!groupInfo) return reply("‚ùå “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è “ì·¥á·¥õ·¥Ñ ú …¢ Ä·¥è·¥ú·¥ò …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥.");

        const groupName = groupInfo.subject || "Unknown Group";
        const totalMembers = participants?.length || 0;
        if (totalMembers === 0) return reply("‚ùå …¥·¥è ·¥ç·¥á·¥ç ô·¥á Äs “ì·¥è·¥ú…¥·¥Ö …™…¥ ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò.");

        // üîπ Random emoji
        const emojis = ['üì¢', 'üîä', 'üåê', 'üî∞', '‚ù§‚Äçü©π', 'ü§ç', 'üñ§', 'ü©µ', 'üìù', 'üíó', 'üîñ', 'ü™©', 'üì¶', 'üéâ', 'üõ°Ô∏è', 'üí∏', '‚è≥', 'üóø', 'üöÄ', 'üéß', 'ü™Ä', '‚ö°', 'üö©', 'üçÅ', 'üó£Ô∏è', 'üëª', '‚ö†Ô∏è', 'üî•'];
        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

        // üîπ Extract message or set default
        let message = body.slice(body.indexOf(command) + command.length).trim();
        if (!message) message = "üì¢ ·¥Ä·¥õ·¥õ·¥á…¥·¥õ…™·¥è…¥ ·¥á·¥†·¥á Ä è·¥è…¥·¥á!";

        let teks = `‚ñ¢ …¢ Ä·¥è·¥ú·¥ò : *${groupName}*\n‚ñ¢ ·¥ç·¥á·¥ç ô·¥á Äs : *${totalMembers}*\n‚ñ¢ ·¥ç·¥áss·¥Ä…¢·¥á: *${message}*\n\n‚îå‚îÄ‚îÄ‚îÄ‚ä∑ *·¥ç·¥á…¥·¥õ…™·¥è…¥s*\n`;

        for (let mem of participants) {
            teks += `*‚îÇ‚Ä¢* ${randomEmoji} @${mem.id.split('@')[0]}\n`;
        }
        teks += "‚îî‚îÄ‚îÄ·¥ç·¥á…¢·¥Ä ü·¥è·¥Ö·¥è…¥-·¥ç·¥Ö‚îÄ‚îÄ";

        // üîπ Send message with mentions
        conn.sendMessage(from, { text: teks, mentions: participants.map(a => a.id) }, { quoted: mek });

    } catch (e) {
        console.error("TagAll Error:", e);
        reply(`‚ùå An error occurred.\n\n${e.message || e}`);
    }
});
