const config = require('../config');
const { cmd } = require('../command');

cmd({
    pattern: "tagall",
    react: "üîä",
    alias: ["gc_tagall"],
    desc: "Tag all group members (Admins & Owner only)",
    category: "group",
    use: '.tagall [message]',
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, isAdmins, isCreator, command, body }) => {
    try {
        if (!isGroup) return reply("‚ùå ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs.");
        if (!isAdmins && !isCreator) return reply("‚ùå ·¥è…¥ ü è …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s ·¥è Ä ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.");

        const groupInfo = await conn.groupMetadata(from).catch(() => null);
        if (!groupInfo) return reply("‚ùå “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è “ì·¥á·¥õ·¥Ñ ú …¢ Ä·¥è·¥ú·¥ò …™…¥“ì·¥è.");

        const groupName = groupInfo.subject || "Unknown Group";
        const totalMembers = participants?.length || 0;
        if (totalMembers === 0) return reply("‚ùå …¥·¥è ·¥ç·¥á·¥ç ô·¥á Äs “ì·¥è·¥ú…¥·¥Ö …™…¥ ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò.");

        // Extract message or default
        let message = body.slice(body.indexOf(command) + command.length).trim();
        if (!message) message = "üì¢ ·¥Ä·¥õ·¥õ·¥á…¥·¥õ…™·¥è…¥ ·¥á·¥†·¥á Ä è·¥è…¥·¥á!";

        // Format text in your style
        let teks = `‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢
‚îã *…¢ Ä·¥è·¥ú·¥ò* : ${groupName}
‚îã *·¥ç·¥á·¥ç ô·¥á Äs* : ${totalMembers}
‚îã *·¥ç·¥áss·¥Ä…¢·¥á* : ${message}
‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢
‚îã *·¥ç·¥á…¥·¥õ…™·¥è…¥s* :`;

        for (let mem of participants) {
            teks += `\n‚îã ‚Ä¢ @${mem.id.split('@')[0]}`;
        }

        teks += `\n‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢
‚îã *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú* 
‚ü£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ü¢`;

        // Send message with mentions
        await conn.sendMessage(from, { text: teks, mentions: participants.map(a => a.id) }, { quoted: mek });

    } catch (e) {
        console.error("·¥õ·¥Ä…¢·¥Ä ü ü ·¥á Ä Ä·¥è Ä:", e);
        reply(`‚ùå ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö.\n\n${e.message || e}`);
    }
});
